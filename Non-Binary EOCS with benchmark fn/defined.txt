%
%
%

function func = BenchmarkFunction(name, variable_num)


    if (strcmp(name, "F1"))
        func = F1(variable_num);
    elseif (strcmp(name, "F2"))
        func = F2(variable_num);
    elseif (strcmp(name, "F3"))
        func = F3(variable_num);
    elseif (strcmp(name, "F4"))
        func = F4(variable_num);
    elseif (strcmp(name, "F5"))
        func = F5(variable_num);
    elseif (strcmp(name, "F6"))
        func = F6(variable_num);
    elseif (strcmp(name, "F7"))
        func = F7(variable_num);
    elseif (strcmp(name, "F8"))
        func = F8(variable_num);
    elseif (strcmp(name, "F9"))
        func = F9(variable_num);
    elseif (strcmp(name, "F10"))
        func = F10(variable_num);
    elseif (strcmp(name, "F11"))
        func = F11(variable_num);
    elseif (strcmp(name, "F12"))
        func = F12(variable_num);
    elseif (strcmp(name, "F13"))
        func = F13(variable_num);
    elseif (strcmp(name, "F14"))
        func = F14(variable_num);
    elseif (strcmp(name, "F15"))
        func = F15(variable_num);
    elseif (strcmp(name, "F16"))
        func = F16(variable_num);
    elseif (strcmp(name, "F17"))
        func = F17(variable_num);
    elseif (strcmp(name, "F18"))
        func = F18(variable_num);
    elseif (strcmp(name, "F19"))
        func = F19(variable_num);
    elseif (strcmp(name, "F20"))
        func = F20(variable_num);
    elseif (strcmp(name, "F21"))
        func = F21(variable_num);
    elseif (strcmp(name, "F22"))
        func = F22(variable_num);
    elseif (strcmp(name, "F23"))
        func = F23(variable_num);
    elseif (strcmp(name, "Korn"))
        func = Korn(variable_num);
    end
end
%% Benchmark function implementation

%%##### F1 #####
function self = F1(~)

    self.variable_num = 30;
    self.max_search_range = 100;
    self.min_search_range = -100;
    self.optimal_solution = zeros(1, self.variable_num) + 0.;
    self.global_optimum_solution = 0.;
    self.func_name = 'F1';
    self.fitnessFunc = @get_func_val;
    function fval = get_func_val(x)
       fval = sum(x.^2);
    end
end

%%##### F2 #####
function self = F2(~)

    self.variable_num = 30;
    self.max_search_range = 10;
    self.min_search_range = -10;
    self.optimal_solution = zeros(1, self.variable_num) + 0.;
    self.global_optimum_solution = 0.;
    self.func_name = 'F2';
    self.fitnessFunc = @get_func_val;
    function fval = get_func_val(x)
       fval = sum(abs(x))+prod(abs(x));
    end
end

%%##### F3 #####
function self = F3(~)

    self.variable_num = 30;
    self.max_search_range = 100;
    self.min_search_range = -100;
    self.optimal_solution = zeros(1, self.variable_num) + 0.;
    self.global_optimum_solution = 0.;
    self.func_name = 'F3';
    self.fitnessFunc = @get_func_val;
    function o = get_func_val(x)
        dim=size(x,2);
        o=0;
        for i=1:dim
            o=o+sum(x(1:i))^2;
        end
    end
end

%%##### F4 #####
function self = F4(~)

    self.variable_num = 30;
    self.max_search_range = 100;
    self.min_search_range = -100;
    self.optimal_solution = zeros(1, self.variable_num) + 0.;
    self.global_optimum_solution = 0.;
    self.func_name = 'F4';
    self.fitnessFunc = @get_func_val;
    function fval = get_func_val(x)
       fval = max(abs(x));
    end
end

%%##### F5 #####
function self = F5(~)

    self.variable_num = 30;
    self.max_search_range = 30;
    self.min_search_range = -30;
    self.optimal_solution = zeros(1, self.variable_num) + 0.;
    self.global_optimum_solution = 0.;
    self.func_name = 'F5';
    self.fitnessFunc = @get_func_val;
    function o = get_func_val(x)
        dim=size(x,2);
        o=sum(100*(x(2:dim)-(x(1:dim-1).^2)).^2+(x(1:dim-1)-1).^2);
    end
end

%%##### F6 #####
function self = F6(~)

    self.variable_num = 30;
    self.max_search_range = 100;
    self.min_search_range = -100;
    self.optimal_solution = zeros(1, self.variable_num) + 0.;
    self.global_optimum_solution = 0.;
    self.func_name = 'F6';
    self.fitnessFunc = @get_func_val;
    function fval = get_func_val(x)
       fval = sum(abs((x+.5)).^2);
    end
end

%%##### F7 #####
function self = F7(~)

    self.variable_num = 30;
    self.max_search_range = 1.28;
    self.min_search_range = -1.28;
    self.optimal_solution = zeros(1, self.variable_num) + 0.;
    self.global_optimum_solution = 0.;
    self.func_name = 'F7';
    self.fitnessFunc = @get_func_val;
    function o = get_func_val(x)
        dim=size(x,2);
        o=sum([1:dim].*(x.^4))+rand;
    end
end

%%##### F8 #####
function self = F8(~)

    self.variable_num = 30;
    self.max_search_range = 500;
    self.min_search_range = -500;
    self.optimal_solution = zeros(1, self.variable_num) + 0.;
    self.global_optimum_solution = 0.;
    self.func_name = 'F8';
    self.fitnessFunc = @get_func_val;
    function fval = get_func_val(x)
       fval = sum(-x.*sin(sqrt(abs(x))));
    end
end

%%##### F9 #####
function self = F9(~)

    self.variable_num = 30;
    self.max_search_range = 5.12;
    self.min_search_range = -5.12;
    self.optimal_solution = zeros(1, self.variable_num) + 0.;
    self.global_optimum_solution = 0.;
    self.func_name = 'F9';
    self.fitnessFunc = @get_func_val;
    function o = get_func_val(x)
        dim=size(x,2);
        o=sum(x.^2-10*cos(2*pi.*x))+10*dim;
    end
end

%%##### F10 #####
function self = F10(~)

    self.variable_num = 30;
    self.max_search_range = 32;
    self.min_search_range = -32;
    self.optimal_solution = zeros(1, self.variable_num) + 0.;
    self.global_optimum_solution = 0.;
    self.func_name = 'F10';
    self.fitnessFunc = @get_func_val;
    function o = get_func_val(x)
        dim=size(x,2);
        o=-20*exp(-.2*sqrt(sum(x.^2)/dim))-exp(sum(cos(2*pi.*x))/dim)+20+exp(1);
    end
end

%%##### F11 #####
function self = F11(~)

    self.variable_num = 30;
    self.max_search_range = 600;
    self.min_search_range = -600;
    self.optimal_solution = zeros(1, self.variable_num) + 0.;
    self.global_optimum_solution = 0.;
    self.func_name = 'F11';
    self.fitnessFunc = @get_func_val;
    function o = get_func_val(x)
        dim=size(x,2);
        o=sum(x.^2)/4000-prod(cos(x./sqrt([1:dim])))+1;
    end
end

%%##### F12 #####
function self = F12(~)

    self.variable_num = 30;
    self.max_search_range = 50;
    self.min_search_range = -50;
    self.optimal_solution = zeros(1, self.variable_num) + 0.;
    self.global_optimum_solution = 0.;
    self.func_name = 'F12';
    self.fitnessFunc = @get_func_val;
    function o = get_func_val(x)
       dim=size(x,2);
        o=(pi/dim)*(10*((sin(pi*(1+(x(1)+1)/4)))^2)+sum((((x(1:dim-1)+1)./4).^2).*...
        (1+10.*((sin(pi.*(1+(x(2:dim)+1)./4)))).^2))+((x(dim)+1)/4)^2)+sum(Ufun(x,10,100,4));
    end
end

%%##### F13 #####
function self = F13(~)

    self.variable_num = 30;
    self.max_search_range = 50;
    self.min_search_range = -50;
    self.optimal_solution = zeros(1, self.variable_num) + 0.;
    self.global_optimum_solution = 0.;
    self.func_name = 'F13';
    self.fitnessFunc = @get_func_val;
    function o = get_func_val(x)
       dim=size(x,2);
        o=.1*((sin(3*pi*x(1)))^2+sum((x(1:dim-1)-1).^2.*(1+(sin(3.*pi.*x(2:dim))).^2))+...
        ((x(dim)-1)^2)*(1+(sin(2*pi*x(dim)))^2))+sum(Ufun(x,5,100,4));
    end
end

%%##### F14 #####
function self = F14(~)

    self.variable_num = 2;
    self.max_search_range = 65.536;
    self.min_search_range = -65.536;
    self.optimal_solution = [-16., -32.];
    self.global_optimum_solution = 0.;
    self.func_name = 'F14';
    self.fitnessFunc = @get_func_val;
    function o = get_func_val(x)
       aS=[-32 -16 0 16 32 -32 -16 0 16 32 -32 -16 0 16 32 -32 -16 0 16 32 -32 -16 0 16 32;,...
        -32 -32 -32 -32 -32 -16 -16 -16 -16 -16 0 0 0 0 0 16 16 16 16 16 32 32 32 32 32];
        
        for j=1:25
            bS(j)=sum((x'-aS(:,j)).^6);
        end
        o=(1/500+sum(1./([1:25]+bS))).^(-1);
    end
end

%%##### F15 #####
function self = F15(~)

    self.variable_num = 30;
    self.max_search_range = 5;
    self.min_search_range = -5;
    self.optimal_solution = zeros(1, self.variable_num) + 0.;
    self.global_optimum_solution = 0.;
    self.func_name = 'F15';
    self.fitnessFunc = @get_func_val;
    function o = get_func_val(x)
       aK=[.1957 .1947 .1735 .16 .0844 .0627 .0456 .0342 .0323 .0235 .0246];
        bK=[.25 .5 1 2 4 6 8 10 12 14 16];bK=1./bK;
        o=sum((aK-((x(1).*(bK.^2+x(2).*bK))./(bK.^2+x(3).*bK+x(4)))).^2);
    end
end

%%##### F16 #####
function self = F16(~)

    self.variable_num = 2;
    self.max_search_range = 5;
    self.min_search_range = -5;
    self.optimal_solution = zeros(1, self.variable_num) + 0.;
    self.global_optimum_solution = 0.;
    self.func_name = 'F16';
    self.fitnessFunc = @get_func_val;
    function fval = get_func_val(x)
       fval = 4*(x(1)^2)-2.1*(x(1)^4)+(x(1)^6)/3+x(1)*x(2)-4*(x(2)^2)+4*(x(2)^4);
    end
end

%%##### F17 #####
function self = F17(~)

    self.variable_num = 2;
    self.max_search_range = [10, 15];
    self.min_search_range = [-5, 0];
    self.optimal_solution = [pi, 2.275];
    self.global_optimum_solution = 0.;
    self.func_name = 'F17';
    self.fitnessFunc = @get_func_val;
    function fval = get_func_val(x)
       fval = (x(2)-(x(1)^2)*5.1/(4*(pi^2))+5/pi*x(1)-6)^2+10*(1-1/(8*pi))*cos(x(1))+10;
    end
end

%%##### F18 #####
function self = F18(~)

    self.variable_num = 2;
    self.max_search_range = 2;
    self.min_search_range = -2;
    self.optimal_solution = [0, -1];
    self.global_optimum_solution = 0.;
    self.func_name = 'F18';
    self.fitnessFunc = @get_func_val;
    function fval = get_func_val(x)
       fval = (1+(x(1)+x(2)+1)^2*(19-14*x(1)+3*(x(1)^2)-14*x(2)+6*x(1)*x(2)+3*x(2)^2))*...
    (30+(2*x(1)-3*x(2))^2*(18-32*x(1)+12*(x(1)^2)+48*x(2)-36*x(1)*x(2)+27*(x(2)^2)));
    end
end

%%##### F19 #####
function self = F19(~)

    self.variable_num = 3;
    self.max_search_range = 1;
    self.min_search_range = 0;
    self.optimal_solution = zeros(1, self.variable_num) + 0.;
    self.global_optimum_solution = 0.;
    self.func_name = 'F19';
    self.fitnessFunc = @get_func_val;
    function o = get_func_val(x)
        aH=[3 10 30;.1 10 35;3 10 30;.1 10 35];cH=[1 1.2 3 3.2];
        pH=[.3689 .117 .2673;.4699 .4387 .747;.1091 .8732 .5547;.03815 .5743 .8828];
        o=0;
        for i=1:4
            o=o-cH(i)*exp(-(sum(aH(i,:).*((x-pH(i,:)).^2))));
        end
    end
end

%%##### F20 #####
function self = F20(~)

    self.variable_num = 6;
    self.max_search_range = 1;
    self.min_search_range = 0;
    self.optimal_solution = zeros(1, self.variable_num) + 0.;
    self.global_optimum_solution = 0.;
    self.func_name = 'F20';
    self.fitnessFunc = @get_func_val;
    function o = get_func_val(x)
        aH=[10 3 17 3.5 1.7 8;.05 10 17 .1 8 14;3 3.5 1.7 10 17 8;17 8 .05 10 .1 14];
        cH=[1 1.2 3 3.2];
        pH=[.1312 .1696 .5569 .0124 .8283 .5886;.2329 .4135 .8307 .3736 .1004 .9991;...
        .2348 .1415 .3522 .2883 .3047 .6650;.4047 .8828 .8732 .5743 .1091 .0381];
        o=0;
        for i=1:4
            o=o-cH(i)*exp(-(sum(aH(i,:).*((x-pH(i,:)).^2))));
        end
    end
end

%%##### F21 #####
function self = F21(~)

    self.variable_num = 4;
    self.max_search_range = 10;
    self.min_search_range = 0;
    self.optimal_solution = zeros(1, self.variable_num) + 0.;
    self.global_optimum_solution = 0.;
    self.func_name = 'F21';
    self.fitnessFunc = @get_func_val;
    function o = get_func_val(x)
        aSH=[4 4 4 4;1 1 1 1;8 8 8 8;6 6 6 6;3 7 3 7;2 9 2 9;5 5 3 3;8 1 8 1;6 2 6 2;7 3.6 7 3.6];
        cSH=[.1 .2 .2 .4 .4 .6 .3 .7 .5 .5];
        
        o=0;
        for i=1:5
            o=o-((x-aSH(i,:))*(x-aSH(i,:))'+cSH(i))^(-1);
        end
    end
end

%%##### F22 #####
function self = F22(~)

    self.variable_num = 4;
    self.max_search_range = 10;
    self.min_search_range = 0;
    self.optimal_solution = zeros(1, self.variable_num) + 0.;
    self.global_optimum_solution = 0.;
    self.func_name = 'F22';
    self.fitnessFunc = @get_func_val;
    function o = get_func_val(x)
        aSH=[4 4 4 4;1 1 1 1;8 8 8 8;6 6 6 6;3 7 3 7;2 9 2 9;5 5 3 3;8 1 8 1;6 2 6 2;7 3.6 7 3.6];
        cSH=[.1 .2 .2 .4 .4 .6 .3 .7 .5 .5];
        
        o=0;
        for i=1:7
            o=o-((x-aSH(i,:))*(x-aSH(i,:))'+cSH(i))^(-1);
        end
    end
end

%%##### F23 #####
function self = F23(~)

    self.variable_num = 4;
    self.max_search_range = 10;
    self.min_search_range = 0;
    self.optimal_solution = zeros(1, self.variable_num) + 0.;
    self.global_optimum_solution = 0.;
    self.func_name = 'F23';
    self.fitnessFunc = @get_func_val;
    function o = get_func_val(x)
        aSH=[4 4 4 4;1 1 1 1;8 8 8 8;6 6 6 6;3 7 3 7;2 9 2 9;5 5 3 3;8 1 8 1;6 2 6 2;7 3.6 7 3.6];
        cSH=[.1 .2 .2 .4 .4 .6 .3 .7 .5 .5];
        
        o=0;
        for i=1:10
            o=o-((x-aSH(i,:))*(x-aSH(i,:))'+cSH(i))^(-1);
        end
    end
end

function o=Ufun(x,a,k,m)
    o=k.*((x-a).^m).*(x>a)+k.*((-x-a).^m).*(x<(-a));
end

%%##### Korn #####
function self = Korn(~)

    self.variable_num = 2;
    self.max_search_range = 10;
    self.min_search_range = 0;
    self.optimal_solution = [5, 2];
    self.global_optimum_solution = 0.;
    self.func_name = 'Korn';
    self.fitnessFunc = @get_func_val;
    function o = get_func_val(x)
        o = min( (x(1) - 5.).^2 + (x(2) - 2.).^2);
    end
end

